"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/mongoose-paginate-v2";
exports.ids = ["vendor-chunks/mongoose-paginate-v2"];
exports.modules = {

/***/ "(rsc)/./node_modules/mongoose-paginate-v2/dist/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/mongoose-paginate-v2/dist/index.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * @param {Object}              [query={}]\n * @param {Object}              [options={}]\n * @param {Object|String}       [options.select='']\n * @param {Object|String}       [options.projection={}]\n * @param {Object}              [options.options={}]\n * @param {Object|String}       [options.sort]\n * @param {Object|String}       [options.customLabels]\n * @param {Object}              [options.collation]\n * @param {Array|Object|String} [options.populate]\n * @param {Boolean}             [options.lean=false]\n * @param {Boolean}             [options.leanWithId=true]\n * @param {Number}              [options.offset=0] - Use offset or page to set skip position\n * @param {Number}              [options.page=1]\n * @param {Number}              [options.limit=10]\n * @param {Boolean}             [options.useEstimatedCount=true] - Enable estimatedDocumentCount for larger datasets. As the name says, the count may not abe accurate.\n * @param {Function}            [options.useCustomCountFn=false] - use custom function for count datasets.\n * @param {Object}              [options.read={}] - Determines the MongoDB nodes from which to read.\n * @param {Function}            [callback]\n *\n * @returns {Promise}\n */\nvar PaginationParametersHelper = __webpack_require__(/*! ./pagination-parameters */ \"(rsc)/./node_modules/mongoose-paginate-v2/dist/pagination-parameters.js\");\nvar paginateSubDocsHelper = __webpack_require__(/*! ./pagination-subdocs */ \"(rsc)/./node_modules/mongoose-paginate-v2/dist/pagination-subdocs.js\");\nvar paginateQueryHelper = __webpack_require__(/*! ./pagination-queryHelper */ \"(rsc)/./node_modules/mongoose-paginate-v2/dist/pagination-queryHelper.js\");\nvar defaultOptions = {\n  customLabels: {\n    totalDocs: 'totalDocs',\n    limit: 'limit',\n    page: 'page',\n    totalPages: 'totalPages',\n    docs: 'docs',\n    nextPage: 'nextPage',\n    prevPage: 'prevPage',\n    pagingCounter: 'pagingCounter',\n    hasPrevPage: 'hasPrevPage',\n    hasNextPage: 'hasNextPage',\n    meta: null\n  },\n  collation: {},\n  lean: false,\n  leanWithId: true,\n  limit: 10,\n  projection: {},\n  select: '',\n  options: {},\n  pagination: true,\n  useEstimatedCount: false,\n  useCustomCountFn: false,\n  forceCountFn: false,\n  allowDiskUse: false,\n  customFind: 'find'\n};\nfunction paginate(query, options, callback) {\n  options = _objectSpread(_objectSpread(_objectSpread({}, defaultOptions), paginate.options), options);\n  query = query || {};\n  var _options = options,\n    collation = _options.collation,\n    lean = _options.lean,\n    leanWithId = _options.leanWithId,\n    populate = _options.populate,\n    projection = _options.projection,\n    read = _options.read,\n    select = _options.select,\n    sort = _options.sort,\n    pagination = _options.pagination,\n    useEstimatedCount = _options.useEstimatedCount,\n    useCustomCountFn = _options.useCustomCountFn,\n    forceCountFn = _options.forceCountFn,\n    allowDiskUse = _options.allowDiskUse,\n    customFind = _options.customFind;\n  var customLabels = _objectSpread(_objectSpread({}, defaultOptions.customLabels), options.customLabels);\n  var limit = defaultOptions.limit;\n  if (pagination && !isNaN(Number(options.limit))) {\n    limit = parseInt(options.limit, 10) > 0 ? parseInt(options.limit, 10) : 0;\n  }\n  var isCallbackSpecified = typeof callback === 'function';\n  var findOptions = options.options;\n  var offset;\n  var page;\n  var skip;\n  var docsPromise = [];\n\n  // Labels\n  var labelDocs = customLabels.docs;\n  var labelLimit = customLabels.limit;\n  var labelNextPage = customLabels.nextPage;\n  var labelPage = customLabels.page;\n  var labelPagingCounter = customLabels.pagingCounter;\n  var labelPrevPage = customLabels.prevPage;\n  var labelTotal = customLabels.totalDocs;\n  var labelTotalPages = customLabels.totalPages;\n  var labelHasPrevPage = customLabels.hasPrevPage;\n  var labelHasNextPage = customLabels.hasNextPage;\n  var labelMeta = customLabels.meta;\n  if (Object.prototype.hasOwnProperty.call(options, 'offset')) {\n    offset = parseInt(options.offset, 10);\n    skip = offset;\n  } else if (Object.prototype.hasOwnProperty.call(options, 'page')) {\n    page = parseInt(options.page, 10) > 0 ? parseInt(options.page, 10) : 1;\n    skip = (page - 1) * limit;\n  } else {\n    offset = 0;\n    page = 1;\n    skip = offset;\n  }\n  if (!pagination) {\n    page = 1;\n  }\n  var countPromise;\n\n  // Only run count when pagination is enabled\n  if (pagination) {\n    if (forceCountFn === true) {\n      // Deprecated since starting from MongoDB Node.JS driver v3.1\n\n      // Hack for mongo < v3.4\n      if (Object.keys(collation).length > 0) {\n        countPromise = this.countDocuments(query, findOptions).collation(collation).exec();\n      } else {\n        countPromise = this.countDocuments(query).exec();\n      }\n    } else {\n      if (useEstimatedCount === true) {\n        countPromise = this.estimatedDocumentCount().exec();\n      } else if (typeof useCustomCountFn === 'function') {\n        countPromise = useCustomCountFn();\n      } else {\n        // Hack for mongo < v3.4\n        if (Object.keys(collation).length > 0) {\n          countPromise = this.countDocuments(query, findOptions).collation(collation).exec();\n        } else {\n          countPromise = this.countDocuments(query).exec();\n        }\n      }\n    }\n  }\n  if (limit) {\n    var mQuery = this[customFind](query, projection, findOptions);\n    if (populate) {\n      mQuery.populate(populate);\n    }\n    mQuery.select(select);\n    mQuery.sort(sort);\n    mQuery.lean(lean);\n    if (read && read.pref) {\n      /**\n       * Determines the MongoDB nodes from which to read.\n       * @param read.pref one of the listed preference options or aliases\n       * @param read.tags optional tags for this query\n       */\n      mQuery.read(read.pref, read.tags);\n    }\n\n    // Hack for mongo < v3.4\n    if (Object.keys(collation).length > 0) {\n      mQuery.collation(collation);\n    }\n    if (pagination) {\n      mQuery.skip(skip);\n      mQuery.limit(limit);\n    }\n    try {\n      if (allowDiskUse === true) {\n        mQuery.allowDiskUse();\n      }\n    } catch (ex) {\n      console.error('Your MongoDB version does not support `allowDiskUse`.');\n    }\n    docsPromise = mQuery.exec();\n    if (lean && leanWithId) {\n      docsPromise = docsPromise.then(function (docs) {\n        docs.forEach(function (doc) {\n          if (doc._id) {\n            doc.id = String(doc._id);\n          }\n        });\n        return docs;\n      });\n    }\n  }\n  return Promise.all([countPromise, docsPromise]).then(function (values) {\n    var count = values[0];\n    var docs = values[1];\n    if (pagination !== true) {\n      count = docs.length;\n    }\n    var meta = {\n      [labelTotal]: count\n    };\n    var result = {};\n    if (typeof offset !== 'undefined') {\n      meta.offset = offset;\n      page = Math.ceil((offset + 1) / limit);\n    }\n    var pages = limit > 0 ? Math.ceil(count / limit) || 1 : null;\n\n    // Setting default values\n    meta[labelLimit] = count;\n    meta[labelTotalPages] = 1;\n    meta[labelPage] = page;\n    meta[labelPagingCounter] = (page - 1) * limit + 1;\n    meta[labelHasPrevPage] = false;\n    meta[labelHasNextPage] = false;\n    meta[labelPrevPage] = null;\n    meta[labelNextPage] = null;\n    if (pagination) {\n      meta[labelLimit] = limit;\n      meta[labelTotalPages] = pages;\n\n      // Set prev page\n      if (page > 1) {\n        meta[labelHasPrevPage] = true;\n        meta[labelPrevPage] = page - 1;\n      } else if (page == 1 && typeof offset !== 'undefined' && offset !== 0) {\n        meta[labelHasPrevPage] = true;\n        meta[labelPrevPage] = 1;\n      }\n\n      // Set next page\n      if (page < pages) {\n        meta[labelHasNextPage] = true;\n        meta[labelNextPage] = page + 1;\n      }\n    }\n\n    // Remove customLabels set to false\n    delete meta['false'];\n    if (limit == 0) {\n      meta[labelLimit] = 0;\n      meta[labelTotalPages] = 1;\n      meta[labelPage] = 1;\n      meta[labelPagingCounter] = 1;\n      meta[labelPrevPage] = null;\n      meta[labelNextPage] = null;\n      meta[labelHasPrevPage] = false;\n      meta[labelHasNextPage] = false;\n    }\n    if (labelMeta) {\n      result = {\n        [labelDocs]: docs,\n        [labelMeta]: meta\n      };\n    } else {\n      result = _objectSpread({\n        [labelDocs]: docs\n      }, meta);\n    }\n    return isCallbackSpecified ? callback(null, result) : Promise.resolve(result);\n  }).catch(function (error) {\n    return isCallbackSpecified ? callback(error) : Promise.reject(error);\n  });\n}\n\n/**\n * @param {Schema} schema\n */\nmodule.exports = function (schema) {\n  schema.statics.paginate = paginate;\n  schema.statics.paginateSubDocs = paginateSubDocsHelper;\n  schema.query.paginate = paginateQueryHelper;\n};\nmodule.exports.PaginationParameters = PaginationParametersHelper;\nmodule.exports.paginateSubDocs = paginateSubDocsHelper;\nmodule.exports.paginate = paginate;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mongoose-paginate-v2/dist/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mongoose-paginate-v2/dist/pagination-parameters.js":
/*!*************************************************************************!*\
  !*** ./node_modules/mongoose-paginate-v2/dist/pagination-parameters.js ***!
  \*************************************************************************/
/***/ ((module) => {

eval("\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\nvar PaginationParametersHelper = /*#__PURE__*/function () {\n  function PaginationParametersHelper(request) {\n    _classCallCheck(this, PaginationParametersHelper);\n    this.query = request.query;\n  }\n\n  /**\r\n   * Handle boolean options\r\n   * If the 'option'-Parameter is a string, check if it equals 'true'\r\n   * If not, it should be a boolean, and can be returned as it is.\r\n   *\r\n   * @param {string|boolean} option\r\n   * @return {boolean}\r\n   * */\n  _createClass(PaginationParametersHelper, [{\n    key: \"booleanOpt\",\n    value: function booleanOpt(option) {\n      return typeof option === 'string' ? option === 'true' : option;\n    }\n\n    /**\r\n     * Handle options that are strings or objects (including arrays)\r\n     *\r\n     * @param {object|string} option\r\n     * @return {object|string}\r\n     * */\n  }, {\n    key: \"optObjectOrString\",\n    value: function optObjectOrString(option) {\n      // Since the JSON in the query object will be strings,\n      // we need to be able to detect this, in order to differentiate between JSON-objects and pure strings.\n      // a pure string, e.g. 'field -test', might not be parsed as wished by JSON.parse\n      var openingBrackets = ['{', '['];\n      var closingBrackets = ['}', ']'];\n      var firstCharIsBracket = option[0] && openingBrackets.includes(option[0]);\n      var lastCharIsBracket = option[option.length - 1] && closingBrackets.includes(option[option.length - 1]);\n      var optionIsObject = firstCharIsBracket && lastCharIsBracket;\n      try {\n        return optionIsObject ? JSON.parse(option) : option;\n      } catch (err) {\n        // Fallback for parsing errors of objects\n        return {};\n      }\n    }\n\n    /**\r\n     * Yields the \"query\" parameter for Model.paginate()\r\n     * given any attributes of the Express req.query-Object,\r\n     * */\n  }, {\n    key: \"getQuery\",\n    value: function getQuery() {\n      var _this$query;\n      var filtersQueryParameter = (_this$query = this.query) === null || _this$query === void 0 ? void 0 : _this$query.query;\n      if (!filtersQueryParameter) return {};\n      try {\n        return JSON.parse(filtersQueryParameter);\n      } catch (err) {\n        return {};\n      }\n    }\n\n    /**\r\n     * Yields the \"options\" parameter for Model.paginate(),\r\n     * given any attributes of the Express req.query-Object\r\n     * */\n  }, {\n    key: \"getOptions\",\n    value: function getOptions() {\n      if (!this.query) return {};\n      var options = {};\n\n      // Instantiate variables with all the possible options for Model.paginate()\n      var select = this.query.select,\n        collation = this.query.collation,\n        sort = this.query.sort,\n        populate = this.query.populate,\n        projection = this.query.projection,\n        lean = this.query.lean,\n        leanWithId = this.query.leanWithId,\n        offset = this.query.offset,\n        page = this.query.page,\n        limit = this.query.limit,\n        customLabels = this.query.customLabels,\n        pagination = this.query.pagination,\n        useEstimatedCount = this.query.useEstimatedCount,\n        useCustomCountFn = this.query.useCustomCountFn,\n        forceCountFn = this.query.forceCountFn,\n        allowDiskUse = this.query.allowDiskUse,\n        read = this.query.read,\n        mongooseOptions = this.query.options;\n\n      // For every option that is set, add it to the 'options' object-literal\n      if (select) options['select'] = this.optObjectOrString(select);\n      if (collation) options['collation'] = this.optObjectOrString(collation);\n      if (sort) options['sort'] = this.optObjectOrString(sort);\n      if (populate) options['populate'] = this.optObjectOrString(populate);\n      if (projection !== undefined) options['projection'] = this.optObjectOrString(projection);\n      if (lean !== undefined) options['lean'] = this.booleanOpt(lean);\n      if (leanWithId !== undefined) options['leanWithId'] = this.booleanOpt(leanWithId);\n      if (offset) options['offset'] = Number(offset);\n      if (page) options['page'] = Number(page);\n      if (limit || limit == 0) options['limit'] = Number(limit);\n      if (customLabels) options['customLabels'] = this.optObjectOrString(customLabels);\n      if (pagination !== undefined) options['pagination'] = this.booleanOpt(pagination);\n      if (useEstimatedCount !== undefined) options['useEstimatedCount'] = this.booleanOpt(useEstimatedCount);\n      if (useCustomCountFn !== undefined) options['useCustomCountFn'] = this.booleanOpt(useCustomCountFn);\n      if (forceCountFn !== undefined) options['forceCountFn'] = this.booleanOpt(forceCountFn);\n      if (allowDiskUse) options['allowDiskUse'] = this.booleanOpt(allowDiskUse);\n      if (read) options['read'] = this.optObjectOrString(read);\n      if (mongooseOptions) options['options'] = this.getOptions(mongooseOptions);\n      return options;\n    }\n\n    /**\r\n     * Yields an array with positions:\r\n     * [0] \"query\" parameter, for Model.paginate()\r\n     * [1] \"options\" parameter, for Model.paginate()\r\n     * */\n  }, {\n    key: \"get\",\n    value: function get() {\n      return [_objectSpread({}, this.getQuery()), _objectSpread({}, this.getOptions())];\n    }\n  }]);\n  return PaginationParametersHelper;\n}();\nmodule.exports = PaginationParametersHelper;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mongoose-paginate-v2/dist/pagination-parameters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mongoose-paginate-v2/dist/pagination-queryHelper.js":
/*!**************************************************************************!*\
  !*** ./node_modules/mongoose-paginate-v2/dist/pagination-queryHelper.js ***!
  \**************************************************************************/
/***/ ((module) => {

eval("\n\n/**\n * Helper function to paginate a query.\n *\n * @param {Object} options - The pagination options.\n * @returns {Promise} - A promise that resolves to the paginated query result.\n */\nfunction paginateQueryHelper(options) {\n  return this.model.paginate(this.getQuery(), options);\n}\nmodule.exports = paginateQueryHelper;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbW9uZ29vc2UtcGFnaW5hdGUtdjIvZGlzdC9wYWdpbmF0aW9uLXF1ZXJ5SGVscGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxVc2VyXFxEb2N1bWVudHNcXFBvcnRmb2xpby1Qcm9qZWN0c1xcRnJvbnRlbmQtUHJvamVjdHNcXHByaW1lXFxub2RlX21vZHVsZXNcXG1vbmdvb3NlLXBhZ2luYXRlLXYyXFxkaXN0XFxwYWdpbmF0aW9uLXF1ZXJ5SGVscGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKipcbiAqIEhlbHBlciBmdW5jdGlvbiB0byBwYWdpbmF0ZSBhIHF1ZXJ5LlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIC0gVGhlIHBhZ2luYXRpb24gb3B0aW9ucy5cbiAqIEByZXR1cm5zIHtQcm9taXNlfSAtIEEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvIHRoZSBwYWdpbmF0ZWQgcXVlcnkgcmVzdWx0LlxuICovXG5mdW5jdGlvbiBwYWdpbmF0ZVF1ZXJ5SGVscGVyKG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRoaXMubW9kZWwucGFnaW5hdGUodGhpcy5nZXRRdWVyeSgpLCBvcHRpb25zKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gcGFnaW5hdGVRdWVyeUhlbHBlcjsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mongoose-paginate-v2/dist/pagination-queryHelper.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mongoose-paginate-v2/dist/pagination-subdocs.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mongoose-paginate-v2/dist/pagination-subdocs.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\r\n * Pagination process for sub-documents\r\n * internally, it would call `query.findOne`, return only one document\r\n *\r\n * @param {Object} query\r\n * @param {Object} options\r\n * @param {Function} callback\r\n */\nfunction paginateSubDocs(query, options, callback) {\n  /**\r\n   * Populate sub documents with pagination fields\r\n   *\r\n   * @param {Object} query\r\n   * @param {Object} populate origin populate option\r\n   * @param {Object} option\r\n   */\n  function getSubDocsPopulate(option) {\n    // options properties for sub-documents pagination\n    var populate = option.populate,\n      _option$page = option.page,\n      page = _option$page === void 0 ? 1 : _option$page,\n      _option$limit = option.limit,\n      limit = _option$limit === void 0 ? 10 : _option$limit;\n    if (!populate) {\n      throw new Error('populate is required');\n    }\n    var offset = (page - 1) * limit;\n    option.offset = offset;\n    var pagination = {\n      skip: offset,\n      limit: limit\n    };\n    if (typeof populate === 'string') {\n      populate = _objectSpread({\n        path: populate\n      }, pagination);\n    } else if (typeof populate === 'object' && !Array.isArray(populate)) {\n      populate = Object.assign(populate, pagination);\n    }\n    option.populate = populate;\n    return populate;\n  }\n  function populateResult(result, populate) {\n    return result.populate(populate);\n  }\n\n  /**\r\n   * Convert result of sub-docs list to pagination like docs\r\n   *\r\n   * @param {Object} result query result\r\n   * @param {Object} option pagination option\r\n   */\n  function constructDocs(paginatedResult, option) {\n    var populate = option.populate,\n      _option$offset = option.offset,\n      offset = _option$offset === void 0 ? 0 : _option$offset,\n      _option$page2 = option.page,\n      page = _option$page2 === void 0 ? 1 : _option$page2,\n      _option$limit2 = option.limit,\n      limit = _option$limit2 === void 0 ? 10 : _option$limit2;\n    var path = populate.path;\n    var count = option.count;\n    var paginatedDocs = paginatedResult[path];\n    if (!paginatedDocs) {\n      throw new Error(`Parse error! Cannot find key on result with path ${path}`);\n    }\n    page = Math.ceil((offset + 1) / limit);\n\n    // set default meta\n    var meta = {\n      docs: paginatedDocs,\n      totalDocs: count || 1,\n      limit: limit,\n      page: page,\n      prevPage: null,\n      nextPage: null,\n      hasPrevPage: false,\n      hasNextPage: false\n    };\n    var totalPages = limit > 0 ? Math.ceil(count / limit) || 1 : null;\n    meta.totalPages = totalPages;\n    meta.pagingCounter = (page - 1) * limit + 1;\n\n    // Set prev page\n    if (page > 1) {\n      meta.hasPrevPage = true;\n      meta.prevPage = page - 1;\n    } else if (page == 1 && offset !== 0) {\n      meta.hasPrevPage = true;\n      meta.prevPage = 1;\n    }\n\n    // Set next page\n    if (page < totalPages) {\n      meta.hasNextPage = true;\n      meta.nextPage = page + 1;\n    }\n    if (limit == 0) {\n      meta.limit = 0;\n      meta.totalPages = 1;\n      meta.page = 1;\n      meta.pagingCounter = 1;\n    }\n    Object.defineProperty(paginatedResult, path, {\n      value: meta,\n      writable: false\n    });\n  }\n\n  // options properties for main document query\n  var populate = options.populate,\n    _options$read = options.read,\n    read = _options$read === void 0 ? {} : _options$read,\n    _options$select = options.select,\n    select = _options$select === void 0 ? '' : _options$select,\n    _options$pagination = options.pagination,\n    pagination = _options$pagination === void 0 ? true : _options$pagination,\n    pagingOptions = options.pagingOptions,\n    projection = options.projection;\n  var mQuery = this.findOne(query, projection);\n  if (read && read.pref) {\n    /**\r\n     * Determines the MongoDB nodes from which to read.\r\n     * @param read.pref one of the listed preference options or aliases\r\n     * @param read.tags optional tags for this query\r\n     */\n    mQuery.read(read.pref, read.tags);\n  }\n  if (select) {\n    mQuery.select(select);\n  }\n  return new Promise(function (resolve, reject) {\n    mQuery.exec().then(function (result) {\n      var newPopulate = [];\n      if (populate) {\n        newPopulate.push(newPopulate);\n      }\n      if (pagination && pagingOptions) {\n        if (Array.isArray(pagingOptions)) {\n          pagingOptions.forEach(function (option) {\n            var populate = getSubDocsPopulate(option);\n            option.count = result[populate.path].length;\n            newPopulate.push(populate);\n          });\n        } else {\n          var _populate = getSubDocsPopulate(pagingOptions);\n          pagingOptions.count = result[_populate.path].length;\n          newPopulate.push(_populate);\n        }\n      }\n      populateResult(result, newPopulate).then(function (paginatedResult) {\n        // convert paginatedResult to pagination docs\n        if (pagination && pagingOptions) {\n          if (Array.isArray(pagingOptions)) {\n            pagingOptions.forEach(function (option) {\n              constructDocs(paginatedResult, option);\n            });\n          } else {\n            constructDocs(paginatedResult, pagingOptions);\n          }\n        }\n        callback && callback(null, paginatedResult);\n        resolve(paginatedResult);\n      });\n    }).catch(function (err) {\n      console.error(err.message);\n      callback && callback(err, null);\n      reject(err);\n    });\n  });\n}\nmodule.exports = paginateSubDocs;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mongoose-paginate-v2/dist/pagination-subdocs.js\n");

/***/ })

};
;